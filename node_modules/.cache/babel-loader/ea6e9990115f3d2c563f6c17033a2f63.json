{"ast":null,"code":"var _jsxFileName = \"/Users/arielgelman/Desktop/arielgelman/src/components/CommentsStructure.js\";\nimport React from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport commentData from \"./NewComment\";\nconst useStyles = makeStyles(theme => createStyles({\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\"\n  }\n}));\nexport default function commentsStructure() {\n  const classes = useStyles();\n  const commentComponents = commentData.map(item => (id, primary, secondary, person));\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    square: true,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.text,\n    variant: \"h5\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Inbox\"), React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, commentData.map(({\n    id,\n    primary,\n    secondary,\n    person\n  }) => React.createElement(React.Fragment, {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, id === 1 && React.createElement(ListSubheader, {\n    className: classes.subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Today\"), id === 3 && React.createElement(ListSubheader, {\n    className: classes.subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Yesterday\"), React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Profile Picture\",\n    src: person,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: primary,\n    secondary: secondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))))), React.createElement(AppBar, {\n    position: \"fixed\",\n    color: \"primary\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"Open drawer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"Add\",\n    className: classes.fabButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    edge: \"end\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(MoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/arielgelman/Desktop/arielgelman/src/components/CommentsStructure.js"],"names":["React","createStyles","Theme","makeStyles","AppBar","CssBaseline","Toolbar","Typography","IconButton","Paper","Fab","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","Avatar","MenuIcon","AddIcon","SearchIcon","MoreIcon","commentData","useStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","commentsStructure","classes","commentComponents","map","item","id","primary","secondary","person"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nimport commentData from \"./NewComment\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    text: {\n      padding: theme.spacing(2, 2, 0)\n    },\n    paper: {\n      paddingBottom: 50\n    },\n    list: {\n      marginBottom: theme.spacing(2)\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper\n    },\n    appBar: {\n      top: \"auto\",\n      bottom: 0\n    },\n    grow: {\n      flexGrow: 1\n    },\n    fabButton: {\n      position: \"absolute\",\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: \"0 auto\"\n    }\n  })\n);\n\nexport default function commentsStructure() {\n  const classes = useStyles();\n\n  const commentComponents = commentData.map(\n    item => (id, primary, secondary, person)\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          Inbox\n        </Typography>\n        <List className={classes.list}>\n          {commentData.map(({ id, primary, secondary, person }) => (\n            <React.Fragment key={id}>\n              {id === 1 && (\n                <ListSubheader className={classes.subheader}>\n                  Today\n                </ListSubheader>\n              )}\n              {id === 3 && (\n                <ListSubheader className={classes.subheader}>\n                  Yesterday\n                </ListSubheader>\n              )}\n              <ListItem button>\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\" src={person} />\n                </ListItemAvatar>\n                <ListItemText primary={primary} secondary={secondary} />\n              </ListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Fab color=\"secondary\" aria-label=\"Add\" className={classes.fabButton}>\n            <AddIcon />\n          </Fab>\n          <div className={classes.grow} />\n          <IconButton color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}