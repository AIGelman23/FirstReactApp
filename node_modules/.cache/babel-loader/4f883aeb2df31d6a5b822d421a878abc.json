{"ast":null,"code":"var _jsxFileName = \"/Users/arielgelman/Desktop/arielgelman/src/components/GridList.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport tileData from \"./tileData\";\nimport Card from \"./Card\";\nimport cardsData from \"./NewCard\";\nconst cardComponents = cardsData.map(item => React.createElement(Card, {\n  key: item.id,\n  card: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    transform: \"translateZ(0)\"\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  }\n}));\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: 2.5,\n    style: {\n      margin: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, tileData.map(tile => React.createElement(GridListTile, {\n    key: tile.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, cardComponents.pop(2), React.createElement(GridListTileBar, {\n    title: tile.title,\n    classes: {\n      root: classes.titleBar,\n      title: classes.title\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/arielgelman/Desktop/arielgelman/src/components/GridList.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","tileData","Card","cardsData","cardComponents","map","item","id","useStyles","theme","root","display","flexWrap","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","SingleLineGridList","classes","margin","tile","img","pop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,MAAMC,cAAc,GAAGD,SAAS,CAACE,GAAV,CAAcC,IAAI,IACvC,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,EAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADqB,CAAvB;AAIA,MAAME,SAAS,GAAGX,UAAU,CAACY,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GAD+B;AAQrCC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,QAAQ,EAAE,QADF;AAERO,IAAAA,SAAS,EAAE;AAFH,GAR2B;AAYrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEZ,KAAK,CAACM,OAAN,CAAcO,OAAd,CAAsBC;AADxB,GAZ8B;AAerCC,EAAAA,QAAQ,EAAE;AACRR,IAAAA,UAAU,EACR;AAFM;AAf2B,CAAL,CAAN,CAA5B;AAqBA,eAAe,SAASS,kBAAT,GAA8B;AAC3C,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAEgB,OAAO,CAACR,QADrB;AAEE,IAAA,IAAI,EAAE,GAFR;AAGE,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAV,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG1B,QAAQ,CAACI,GAAT,CAAauB,IAAI,IAChB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,cAAc,CAAC0B,GAAf,CAAmB,CAAnB,CADH,EAEE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAEF,IAAI,CAACR,KADd;AAEE,IAAA,OAAO,EAAE;AACPV,MAAAA,IAAI,EAAEgB,OAAO,CAACF,QADP;AAEPJ,MAAAA,KAAK,EAAEM,OAAO,CAACN;AAFR,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CALH,CADF,CADF;AAsBD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport tileData from \"./tileData\";\nimport Card from \"./Card\";\nimport cardsData from \"./NewCard\";\n\nconst cardComponents = cardsData.map(item => (\n  <Card key={item.id} card={item} />\n));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    transform: \"translateZ(0)\"\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\"\n  }\n}));\n\nexport default function SingleLineGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList\n        className={classes.gridList}\n        cols={2.5}\n        style={{ margin: \"50px\" }}\n      >\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            {cardComponents.pop(2)}\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title\n              }}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}